version: '3.8'

services:
  # Unreal Engine Dedicated Server
  ue-game-server:
    build:
      context: .
      args:
        PROJECT_NAME: ${PROJECT_NAME:-EvolutionGame}
        PROJECT_DIR: ${PROJECT_DIR:-UnrealProjects/EvolutionGame}
        BUILD_CONFIG: ${BUILD_CONFIG:-Shipping}
        BUILD_DIR: ${BUILD_DIR:-UnrealProjects/EvolutionGame/Build/LinuxServer}
    env_file:
      - .env
    ports:
      - "${UE_PORT:-7777}:${UE_PORT:-7777}/udp"
      - "${UE_QUERY_PORT:-27015}:${UE_QUERY_PORT:-27015}/udp"
    volumes:
      - ./logs/server:/home/ue-server/${PROJECT_NAME}Server/Saved/Logs
      - ./logs/crashes:/home/ue-server/${PROJECT_NAME}Server/Saved/Crashes
      - ./logs/abs:/home/ue-server/logs
      # Dev-only mount: comment/remove for production
      - ./${BUILD_DIR:-UnrealProjects/EvolutionGame/Build/LinuxServer}/:/home/ue-server/${PROJECT_NAME}Server
      - ./GameServer.sh:/home/ue-server/${PROJECT_NAME}Server/GameServer.sh
    depends_on:
      ue-database:
        condition: service_healthy
      ue-django-backend:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "nc -z -u 127.0.0.1 ${UE_QUERY_PORT:-27015} || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3



  # Django Backend
  ue-django-backend:
    build:
      context: .
      dockerfile: DjangoBackend/Dockerfile
    volumes:
      - ./DjangoBackend:/app
      - ./DjangoBackend/config:/app/config:ro
    ports:
      - "8000:8000"
    environment:
      - DJANGO_SETTINGS_MODULE=config.settings
    env_file:
      - .env
    depends_on:
      ue-database:
        condition: service_healthy
    entrypoint: ["/app/entrypoint.sh"]
    restart: unless-stopped

  # PostgreSQL Database
  ue-database:
    image: postgres:15
    restart: unless-stopped
    environment:
      POSTGRES_DB: ${DB_NAME:-uegame}
      POSTGRES_USER: ${DB_USER:-admin}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-securepassword}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./backups:/backups
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${DB_USER:-admin}", "-d", "${DB_NAME:-uegame}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data: